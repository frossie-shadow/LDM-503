#python
#Take list file with and make a tex table 

import os
import fileinput
import sys

def processFile(fini,tout ):
    "Read the tree file and ocntrcut a tree structure"
    count=0
    ptree = Tree()
    for line in fin :
        if line.startswith(",,,,") or line.startswith("Component"):
                continue
        count= count + 1
        line=line.replace("\"","")
        line=line.rstrip('\r\n')
        part=line.split(","); #comp,req.des.tesspec.ad,on.user,tut.Rcolo
        
        if (part[7] != "" ):
            tout.write("\\rowcolor{"+part[7]+"} \n ")
        tout.write(part[0]+" &  "+part[3]+" \\\\ \\hline \n")

    sys.stdout.write(  str(count) + " test spec lines \n")
    return ptree;

def fixTex(text ):
    ret = text.replace("_","\\_")
    ret = ret.replace("/","/ ")
    return ret;

def doFile(inFile ):
    "This processes a csv and produces a  tex longtable."
    f=inFile 
    nt = "TopLeveTestSpecs.tex"
    sys.stdout.write( "Processing " + f  +"--> (table)" + nt)
    fin = open (f,'r')

    tout = open (nt,'w')

    theader(tout)

    processFile(fin,tout)

    tfooter(tout)
    tout.close()
    fin.close()

    return;
 # End DoFile


def theader(tout):
     tout.write("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%")
     tout.write("%%  Test Spec  table generated by "+__file__+" do not modify.")
     tout.write("\n")
     tout.write("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%")
     tout.write("\n")
     tout.write("\\begin{longtable}{|p{0.3\\textwidth}|p{0.2\\textwidth}\hline \n ")
     tout.write("\\bf Component & Testing Spec \\\\ \hline   \n")

     return


def tfooter(tout):
     tout.write("\end{longtable} \n")
     tout.write("\\normalsize \n")
     return;


### MAIN 
doFile("TopLevelTestSpecs.csv")
